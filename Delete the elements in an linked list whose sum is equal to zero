class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


def delete_zero_sum_nodes(head):
    dummy = Node(0)
    dummy.next = head

    prefix_sum = 0
    sum_map = {}  
    current = dummy
    while current:
        prefix_sum += current.data
        sum_map[prefix_sum] = current
        current = current.next

    prefix_sum = 0
    current = dummy
    while current:
        prefix_sum += current.data
        current.next = sum_map[prefix_sum].next if prefix_sum in sum_map else current.next
        current = current.next

    return dummy.next 
head = Node(3)
head.next = Node(4)
head.next.next = Node(-7)
head.next.next.next = Node(5)
head.next.next.next.next = Node(-6)
head.next.next.next.next.next = Node(6)
head.next.next.next.next.next.next = Node(1)
head.next.next.next.next.next.next.next = Node(-2)

print("Original Linked List:")
current = head
while current:
    print(current.data, end=" -> ")
    current = current.next
print("None")

head = delete_zero_sum_nodes(head)

print("Linked List after deleting zero-sum segments:")
current = head
while current:
    print(current.data, end=" -> ")
    current = current.next
print("None")




# output

Original Linked List:
3 -> 4 -> -7 -> 5 -> -6 -> 6 -> 1 -> -2 -> None
Linked List after deleting zero-sum segments:
3 -> 4 -> 6 -> 1 -> -2 -> None
