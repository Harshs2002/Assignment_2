import heapq

def find_kth_largest_smallest(arr, k):
    max_heap = []
    for num in arr[:k]:
        heapq.heappush(max_heap, -num)

    for num in arr[k:]:
        if -num > max_heap[0]:
            heapq.heappop(max_heap)
            heapq.heappush(max_heap, -num)

    kth_largest = -max_heap[0]

    min_heap = arr[:k]
    heapq.heapify(min_heap)

    for num in arr[k:]:
        if num < min_heap[-1]:
            heapq.heappop(min_heap)
            heapq.heappush(min_heap, num)

    kth_smallest = min_heap[0]

    return kth_largest, kth_smallest


array = [5, 9, 1, 3, 7, 2, 8, 4, 6]
k = 3

kth_largest, kth_smallest = find_kth_largest_smallest(array, k)
print(f"Kth largest number: {kth_largest}")
print(f"Kth smallest number: {kth_smallest}")

# output 
Kth largest number: 3
Kth smallest number: 4
